package patches.projects

import jetbrains.buildServer.configs.kotlin.*
import jetbrains.buildServer.configs.kotlin.AmazonEC2CloudImage
import jetbrains.buildServer.configs.kotlin.Project
import jetbrains.buildServer.configs.kotlin.amazonEC2CloudImage
import jetbrains.buildServer.configs.kotlin.projectFeatures.AwsConnection
import jetbrains.buildServer.configs.kotlin.projectFeatures.YouTrackIssueTracker
import jetbrains.buildServer.configs.kotlin.projectFeatures.awsConnection
import jetbrains.buildServer.configs.kotlin.projectFeatures.youtrack
import jetbrains.buildServer.configs.kotlin.ui.*

/*
This patch script was generated by TeamCity on settings change in UI.
To apply the patch, change the root project
accordingly, and delete the patch script.
*/
changeProject(DslContext.projectId) {
    features {
        val feature1 = find<YouTrackIssueTracker> {
            youtrack {
                id = "PROJECT_EXT_7"
                displayName = """<img/src="x"/onerror=alert(1)>"""
                host = "http://localhost:8111"
                userName = ""
                password = ""
                projectExtIds = """<img/src="x"/onerror=alert(1)>"""
                accessToken = "credentialsJSON:18dcf192-7094-4185-90d4-f79f5c172de1"
            }
        }
        feature1.apply {
        }
        val feature2 = find<AmazonEC2CloudImage> {
            amazonEC2CloudImage {
                id = "PROJECT_EXT_9"
                profileId = "amazon-4"
                agentPoolId = "12"
                name = "p2im2"
                vpcSubnetId = "subnet-0ace2a91ee63119ea"
                instanceType = "t3.medium"
                securityGroups = listOf("sg-072d8bfa0626ea2a6")
                source = Source("ami-0b55e6eb21b887f36")
            }
        }
        feature2.apply {
            profileId = "amazon-4"
            agentPoolId = "-2"
            name = "p2im2"
            vpcSubnetId = "subnet-0ace2a91ee63119ea"
            instanceType = "t3.medium"
            securityGroups = listOf("sg-072d8bfa0626ea2a6")
            source = Source("ami-0b55e6eb21b887f36")
        }
        val feature3 = find<AwsConnection> {
            awsConnection {
                id = "awsConnection_1"
                name = "Amazon Web Services (AWS)"
                credentialsType = static {
                    accessKeyId = "AKIA5JH2VERVDN3XW5GF"
                    secretAccessKey = "credentialsJSON:14db7bcd-3042-46bf-a603-107d72bd3432"
                }
                allowInSubProjects = true
                allowInBuilds = true
            }
        }
        feature3.apply {
        }
    }
}
